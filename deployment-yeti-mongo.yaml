kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: yeti-mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      name: yeti-mongo
  template:
    metadata:
      labels:
        name: yeti-mongo
    spec:
      # securityContext:
      #   fsGroup: 1000
      #   runAsGroup: 1000
      #   runAsUser: 1000
      containers:
        - image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/cto/csoc-poc:mongo
          name: yeti-mongo
          # securityContext:
          #   fsGroup: 1000
          #   runAsNonRoot: true
          #   runAsUser: 1000
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          ports:
            - name: mongo
              containerPort: 27017
          env:
            - name: MONGO_LOG_DIR
              value: /dev/null
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 60
          # volumeMounts:
          #   - name: yeti-mongo
          #     mountPath: /var/lib/mongoql/data
          #     readOnly: false
      restartPolicy: Always
      # volumes:
      #   - name: yeti-mongo
      #     persistentVolumeClaim:
      #       claimName: yeti-mongo
